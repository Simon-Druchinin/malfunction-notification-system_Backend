# Generated by Django 4.2 on 2023-05-09 17:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=127, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MalfunctionReportStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=127)),
            ],
        ),
        migrations.CreateModel(
            name='RoomSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=127, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schemas.itemcategory')),
                ('room_schema_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schemas.roomschema')),
            ],
        ),
        migrations.CreateModel(
            name='MalfunctionReportItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_text', models.TextField(blank=True, help_text='Описание неисправности элемента', null=True)),
                ('malfunction_report_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schemas.roomschema')),
                ('room_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schemas.roomitem')),
            ],
        ),
        migrations.CreateModel(
            name='MalfunctionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_text', models.TextField(blank=True, help_text='Общее описание неисправностей в комнате', null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('room_schema_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schemas.roomschema')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='schemas.malfunctionreportstatus')),
                ('taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=127, unique=True)),
                ('characteristics', models.CharField(max_length=255)),
                ('item_type', models.CharField(help_text='Тип элемента для отрисовки на сайте (lamp, table, ...)', max_length=127)),
                ('item_section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='schemas.itemcategory')),
            ],
        ),
    ]
